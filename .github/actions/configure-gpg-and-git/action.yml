name: Configure GNU Privacy Guard and Git
description: |
  Configures GNU Privacy Guard and Git with identity and key for making signed
  commits.
inputs:
  git-user-email:
    description: Email address to configure for interacting with Git.
    type: string
    required: true
  git-user-name:
    description: Name to configure for interacting with Git.
    type: string
    required: true
  gpg-passphrase:
    description: Passphrase for the GPG private key.
    type: string
    required: true
  gpg-private-key:
    description: Private key for signing commits and tags with GPG.
    type: string
    required: true
runs:
  using: composite
  steps:
    - name: Import GPG Key
      id: import-gpg-key
      run: |
        export GPG_TTY=$(tty)
        gpgconf --kill gpg-agent
        mkdir -p ~/.gnupg
        echo "allow-loopback-pinentry" >> ~/.gnupg/gpg-agent.conf
        gpgconf --launch gpg-agent
        echo "${{ inputs.gpg-private-key }}" | gpg --batch --import
        KEY_ID=$(gpg --list-secret-keys --with-colons | awk -F: '/^sec/{print $5}' | head -n1)
        echo "${{ inputs.gpg-passphrase }}" | gpg --batch --pinentry-mode loopback \
        --passphrase-fd 0 --edit-key "$KEY_ID" trust quit
        echo "$KEY_ID:6:" | gpg --import-ownertrust
        echo "key-id=$KEY_ID" >> "$GITHUB_OUTPUT"
      shell: bash
    - name: Configure Git
      run: |
        git config user.name "${{ inputs.git-user-name }}"
        git config user.email "${{ inputs.git-user-email }}"
        git config user.signingkey "${{ steps.import-gpg-key.outputs.key-id }}"
        git config commit.gpgsign true
      shell: bash
