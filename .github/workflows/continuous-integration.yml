name: Continuous Integration
on:
  pull_request:
    branches:
      - main
    paths:
      - .github/workflows/continuous-integration.yml
      - '**.rs'
      - '**.snap'
      - Cargo.lock
      - Cargo.toml
      - rust-toolchain.toml
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  check-format:
    name: Check Format
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: -Dwarnings
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Check format
        run: |
          cargo fmt \
          --all \
          --check \
          --verbose
  lint:
    name: Lint
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: -Dwarnings
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Cache
        uses: Swatinem/rust-cache@v2
      - name: Lint
        run: |
          cargo clippy \
          --all-targets \
          --verbose \
          -- \
          -Dclippy::all \
          -Dclippy::cargo \
          -Dclippy::pedantic \
          -Dmissing_docs
  build-and-test:
    name: Build and Test ${{ matrix.name }}
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Linux AMD64
            runner: ubuntu-latest
            artifact-name: linux-amd64
            build-tool: cargo
            target-name: x86_64-unknown-linux-gnu
          - name: Linux ARM64
            runner: ubuntu-latest
            artifact-name: linux-arm64
            build-tool: cross
            target-name: aarch64-unknown-linux-gnu
          - name: macOS AMD64
            runner: macos-latest
            artifact-name: macos-amd64
            build-tool: cargo
            target-name: x86_64-apple-darwin
          - name: macOS ARM64
            runner: macos-latest
            artifact-name: macos-arm64
            build-tool: cargo
            target-name: aarch64-apple-darwin
          - name: Windows AMD64
            runner: windows-latest
            artifact-name: windows-amd64
            build-tool: cargo
            target-name: x86_64-pc-windows-msvc
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Cache
        uses: Swatinem/rust-cache@v2
      - name: Install Cross
        if: matrix.build-tool == 'cross'
        run: |
          cargo install cross \
          --git https://github.com/cross-rs/cross \
          --tag v0.2.5
      - name: Install Toolchain
        if: matrix.build-tool != 'cross'
        run: rustup target add ${{ matrix.target-name }}
      - name: Build
        run: |
          RUSTFLAGS=-DWarnings \
          ${{ matrix.build-tool }} build \
          --all-targets \
          --locked \
          --target ${{ matrix.target-name }} \
          --verbose
        shell: bash
      - name: Test
        run: |
          RUSTFLAGS=-DWarnings \
          ${{ matrix.build-tool }} test \
          --all-targets \
          --locked \
          --no-fail-fast \
          --target ${{ matrix.target-name }} \
          --verbose
        shell: bash
